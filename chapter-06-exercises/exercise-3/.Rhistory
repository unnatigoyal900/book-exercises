return (value+3)
# Define a function `add_three` that takes a single argument and
# returns a value 3 greater than the input
add_three <- function(value){
return (value+3)
}
return (value+3)
return (value + 3)
# Define a function `add_three` that takes a single argument and
# returns a value 3 greater than the input
add_three <- function(value){
return (value + 3)
}
# Create a variable `ten` that is the result of passing 7 to your `add_three`
# function
ten <- add_three(7)
print(ten)
meter <- 0.0254*(feet*12+inches)
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches) {
meter <- 0.0254*(feet*12+inches)
}
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches) {
meter <- 0.0254*(feet*12+inches)
}
View(imperial_to_metric)
View(add_three)
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches) {
meter <- 0.0254*(feet*12+inches)
return (meter)
}
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches) {
meter <- 0.0254*(feet*12+inches)
return (meter)
}
# Create a variable `height_in_meters` by passing your height in imperial to the
# `imperial_to_metric` function
height_in_meters <- imperial_to_metric(5,4)
